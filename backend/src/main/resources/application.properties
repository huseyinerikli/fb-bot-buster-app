# Server Configuration
server.port=8080
server.servlet.context-path=/api

# H2 Database Configuration
spring.datasource.url=jdbc:h2:mem:fbbotbuster
spring.datasource.driverClassName=org.h2.Driver
spring.datasource.username=sa
spring.datasource.password=
spring.h2.console.enabled=true
spring.h2.console.path=/h2-console

# JPA Configuration
spring.jpa.database-platform=org.hibernate.dialect.H2Dialect
spring.jpa.hibernate.ddl-auto=update
spring.jpa.show-sql=true
spring.jpa.properties.hibernate.format_sql=true

# JWT Configuration
jwt.secret=your-secret-key-here
jwt.expiration=86400000

# Twitter API Configuration
twitter.api.key=${TWITTER_API_KEY}
twitter.api.secret=${TWITTER_API_SECRET}
twitter.api.token=${TWITTER_API_TOKEN}

# Twitter OAuth2 Configuration
spring.security.oauth2.client.registration.twitter.provider=twitter
spring.security.oauth2.client.registration.twitter.client-id=${TWITTER_CLIENT_ID}
spring.security.oauth2.client.registration.twitter.client-secret=${TWITTER_CLIENT_SECRET}
spring.security.oauth2.client.registration.twitter.scope=users.read,tweet.read
spring.security.oauth2.client.registration.twitter.client-name=Twitter
spring.security.oauth2.client.registration.twitter.client-authentication-method=client_secret_basic
spring.security.oauth2.client.registration.twitter.authorization-grant-type=authorization_code
spring.security.oauth2.client.registration.twitter.redirect-uri=http://localhost:8080/api/login/oauth2/code/twitter

# Twitter Provider Configuration
spring.security.oauth2.client.provider.twitter.authorization-uri=https://twitter.com/i/oauth2/authorize
spring.security.oauth2.client.provider.twitter.token-uri=https://api.twitter.com/2/oauth2/token
spring.security.oauth2.client.provider.twitter.user-info-uri=https://api.twitter.com/2/users/me?user.fields=id,name,username,profile_image_url
spring.security.oauth2.client.provider.twitter.user-name-attribute=data

# Facebook OAuth2 Configuration
spring.security.oauth2.client.registration.facebook.provider=facebook
spring.security.oauth2.client.registration.facebook.client-id=${FACEBOOK_CLIENT_ID}
spring.security.oauth2.client.registration.facebook.client-secret=${FACEBOOK_CLIENT_SECRET}
spring.security.oauth2.client.registration.facebook.scope=email,public_profile
spring.security.oauth2.client.registration.facebook.client-name=Facebook
spring.security.oauth2.client.registration.facebook.client-authentication-method=client_secret_post
spring.security.oauth2.client.registration.facebook.authorization-grant-type=authorization_code
spring.security.oauth2.client.registration.facebook.redirect-uri=http://localhost:8080/api/login/oauth2/code/facebook

# Facebook Provider Configuration
spring.security.oauth2.client.provider.facebook.authorization-uri=https://www.facebook.com/v12.0/dialog/oauth
spring.security.oauth2.client.provider.facebook.token-uri=https://graph.facebook.com/v12.0/oauth/access_token
spring.security.oauth2.client.provider.facebook.user-info-uri=https://graph.facebook.com/v12.0/me?fields=id,name,email,picture
spring.security.oauth2.client.provider.facebook.user-name-attribute=id

# Session Configuration
server.servlet.session.cookie.same-site=lax
server.servlet.session.cookie.secure=true
spring.session.store-type=memory

# CORS Configuration
spring.mvc.cors.allowed-origins=http://localhost:3000,http://192.168.1.209:3000
spring.mvc.cors.allowed-methods=GET,POST,PUT,DELETE,OPTIONS
spring.mvc.cors.allowed-headers=Authorization,Content-Type,X-Requested-With,Accept,Origin,Access-Control-Request-Method,Access-Control-Request-Headers
spring.mvc.cors.allow-credentials=true
spring.mvc.cors.max-age=3600
spring.mvc.cors.exposed-headers=Authorization

# Logging Configuration
logging.level.com.fbbotbuster=DEBUG
logging.level.org.springframework.security=DEBUG
logging.level.org.springframework.web=DEBUG
logging.level.org.springframework.security.oauth2=TRACE

# Security Configuration
# spring.security.oauth2.client.registration.twitter.redirect-uri-template={baseUrl}/login/oauth2/code/{registrationId} 